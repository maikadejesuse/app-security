name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-store:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: 0028101996
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: app-security:latest

      # - name: Build image
      #   run: docker build -t app-security:latest .



      # - name: Docker Hub
      #   run: | 
      #     docker login -u 0028101996 -p ${{ secrets.DOCKERHUB_TOKEN }}
      #     docker pull ubuntu
      #     docker push ubuntu:latest
    

#          docker build -t app-security:1.0.0 .

      # - name: Push image to Docker Hub
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: Dockerfile
      #     push: true
      #     repository: 0028101996/app-security:my-app
      #     tag: latest
      #     token: ${{ secrets.DOCKERHUB_TOKEN }}

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: docker/setup-buildx-action@v1
#       - name: Build image
#         run: docker build -t my-app:latest .

#   store:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#         - uses: actions/checkout@v2
#         - uses: docker/build-push-action@v2
#           with:
#             context: .
#             file: Dockerfile
#             push: true
#             repository: 0028101996/app-security
#             tag: latest
#             token: ${{ secrets.DOCKERHUB_TOKEN }}

  # Deploy-Preview:
  #   runs-on: ubuntu-latest
  #   needs: store
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install Vercel CLI
  #       run: npm install --global vercel@latest
  #     - name: Pull Vercel Environment Information
  #       run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
  #     - name: Build Project Artifacts
  #       run: |
  #         docker pull 0028101996/app-security/my-app:latest
  #         docker run -p 80:80 0028101996/app-security/my-app:latest
  #     - name: Deploy Project Artifacts to Vercel
  #       run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: vercel/ncc@2.0.0
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         project-name: your-project-name

    # runs-on: ubuntu-latest
    # needs: build
    # steps:
    #   - uses: actions/checkout@v2

    #   - name: Login to Vercel
    #     run: |
    #       echo "${{ secrets.VERCEL_TOKEN }}" | docker login vercel -u ${{ secrets.VERCEL_USERNAME }} --password-stdin

      # - name: Push image to Vercel
      #   run: docker push vercel/my-app

      # - name: Upload to S3
      #   run: |
      #     docker run --rm -it -v $(pwd):/app -w /app lambci/lambda:build-python3.8 pip install awscli
      #     aws s3 cp ./my-app.zip s3://security-app-mai