name: Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - name: Build image
        run: docker build -t my-app .
      - name: Save image my-app.zip
        shell: bash
        run: |
          IMAGE_ID=$(docker image ls -q my-app)
          docker save -o my-app.zip $IMAGE_ID
      - name: Find my-app.zip
        shell: bash
        run: |
           ls 
      
      # - name: Pull image
      #   uses: docker/build-push-action@v2
      #   with:
      #     image: my-app
      # - name: Setup Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: 16.13.0
      # - name: Install dependencies
      #   run: npm install
      # - name: Build app
      #   run: npm run build



      # - name: 'Upload Artifact'
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: my-app
      #     path: my_file.zip
      #     retention-days: 5
      # - name: Find my-app.zip
      #   shell: bash
      #   run: |
      #       ls /

  vercel_repository:
     needs: build
     runs-on: ubuntu-latest

     steps:
       - uses: actions/checkout@v2
       - name: Install vercel
         run: npm install -g vercel

       - name: Build for preview
         run: |
           vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
           vercel build --token=${{ secrets.VERCEL_TOKEN }}
           vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --name my-app my-app.zip
#           vercel deploy --prebuilt --name my-app my-app.zip


  # deploy_s3:
  #   needs: vercel_repository
  #   runs-on: ubuntu-latest
        
  #   steps:
  #     - uses: actions/checkout@v2
      
  #     - name: Download Vercel image
  #       run: |
  #         vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
  #         docker save my-app > my-app.zip

  #     - name: Setup SAM
  #       uses: aws-actions/setup-sam@v2

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-2

  #     - name: Upload to S3
  #       run: |
  #         aws s3 cp ./my-app.zip s3://security-app-mai


#__________________________________________________________________________________

    #   - name: Upload to S3
    #     run: |
    #       docker run --rm -it -v $(pwd):/app -w /app lambci/lambda:build-python3.8 pip install awscli
    #       aws s3 cp ./my-app.zip s3://security-app-mai

#   deploy_production:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2
#       - name: Install vercel
#         run: npm install -g vercel

#       - name: Build for production
#         run: |
#           vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
#           vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
#           vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}